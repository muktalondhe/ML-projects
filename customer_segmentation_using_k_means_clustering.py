# -*- coding: utf-8 -*-
"""customer segmentation using K-Means Clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17rYnis7h3JAQdIknD5SL7_VAZY8c0eQi
"""

#importing the Dependencies

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

#Data Collection And Analysis
customer_data = pd.read_csv('/content/Mall_Customers_Colab_Compatible.csv')

# first 5 rows in the dataframe
customer_data.head()

1 #finding the number of rows and colums
customer_data.shape

# getting some information about the dataset
customer_data.info()

#checking for missing value
customer_data.isnull().sum()

#choosing the Annual Income Column & Spending column

X = customer_data.iloc[:,[5,6]].values

print(X)

#chosing the number of clusters
#WCSS-> Within Clusters Sum of Squares

#finfing wcss value for different number of clusters
wcss =[]
for i in range (1,11):
  kmeans =KMeans(n_clusters=i,init='k-means++',random_state=42)
  kmeans.fit(X)
  wcss.append(kmeans.inertia_)

#plot an elbow grapg
sns.set()
plt.plot(range(1,11),wcss)
plt.title('The Elbow Point Grsph')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

#Optimum Number of Clusters = 5

#training the kmeans clustering Model

kmeans = KMeans(n_clusters=5,init='k-means++',random_state=0)
y_kmeans = kmeans.fit_predict(X)

"""#return a label for each data point based on their cluster

"""

Y = kmeans.fit_predict(X)

print(Y)

"""visualizing all the cluster"""

#plotting all the cluster and their centroids

plt.figure(figsize=(8,8))
plt.scatter(X[Y==0,0],X[Y==0,1], s=50,c='green',label='Cluster 1')
plt.scatter(X[Y==1,0],X[Y==1,1], s=50,c='red',label='Cluster 2')
plt.scatter(X[Y==2,0],X[Y==2,1], s=50,c='yellow',label='Cluster 3')
plt.scatter(X[Y==3,0],X[Y==3,1], s=50,c='violet',label='Cluster 4')
plt.scatter(X[Y==4,0],X[Y==4,1], s=50,c='blue',label='Cluster 5')

#plot the centroids
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=100, c='cyan', label='Centroids')


plt.title('Customer Group')
plt.xlabel('AnnualIncome')
plt.ylabel('Spending Score')
plt.show()

